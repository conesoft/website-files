@page "/{*Path}"

@using Conesoft.Website.Files.Components
@using Conesoft.Website.Files.Components.Viewers

@inject FileHostingPath path
@inject NavigationManager navigation

@code {
    [Parameter] public string? Path { get; set; }

    protected override void OnParametersSet() => Path ??= "";
}

@{
    var url = new Uri(navigation.Uri).PathAndQuery;
    var file = (path.Directory / (Path ?? "")).AsFile;
}
@if (file.Exists == false)
{
    <BreadCrumbs Path="@Path" />

    <MetaData Path="@Path" />
    <DirectoryListing Path="@Path" />

    <StoragePoolSpace/>

    <Conesoft.Blazor.Components.UserLogin />
} 
else
{
    @if (Path != null && (Path.EndsWith(".mkv") || Path.EndsWith(".mp4")))
    {
        <VideoPlayer Url="@Path" />
    }
    else if(Path != null && (Path.EndsWith(".txt") || Path.EndsWith(".nfo")))
    {
        <TextFileViewer Url="@Path" />
    }
    else
    {
        if(string.IsNullOrWhiteSpace(_path) == false) {
            <p>go to: @_path</p>
        }
    }
}

@code {
    string _path = "";
    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (navigation.Uri.EndsWith(".jpg"))
            {
                _path = navigation.BaseUri + "*/" + Path;
                navigation.NavigateTo(_path, forceLoad: true, replace: false);
            }
        }
        return base.OnAfterRenderAsync(firstRender);
    }
}