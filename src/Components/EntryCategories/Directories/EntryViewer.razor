@using Conesoft.Website.Files.Components.Controls

@inherits Base.EntryViewerBase

@using Conesoft.Website.Files.Services
@using System.Reflection
@using Conesoft.Tools
@using Microsoft.AspNetCore.Authorization
@using Serilog

@inject CategoryManager categoryManager

<main style="view-transition-name: --main-content">
    @foreach (var category in categoryManager.Group(Entries))
    {
        <section style="view-transition-name: --category-@(category.Name?.Replace(" ", "") ?? "")" title="@category.Name">
            <ul>
                @foreach (var entry in category.OrganisedEntries)
                {
                    <li style=@($"view-transition-name: --path-{Path.Replace("/","").Replace(".", "").Replace(" ","_")}{entry.Name.Replace(".", "").Replace(" ", "_")}")>
                        <DynamicComponent Type="@category.GetItemTypeOrFallback(EntryCategories.Base.Category.CategoryItemType.ListEntry)"
                                          Parameters="@(new Dictionary<string, object>
                        {
                            ["Category"] = category,
                            ["Entry"] = entry,
                            ["Path"] = Path
                        })" />
                    </li>
                }
            </ul>
        </section>
    }
    <StoragePoolSpace />
</main>

@code {
    IEnumerable<Conesoft.Files.Entry> Entries = [];

    protected override Task OnLiveChange()
    {
        Entries = HostingPaths.DirectoriesAt(Path).Entries().ToArray();

        return Task.CompletedTask;
    }
}